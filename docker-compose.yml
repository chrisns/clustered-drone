version: "3"
services:
  server:
    image: drone/drone:0.7
    networks:
      - proxy
      - default
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.50'
          memory: 256M
      labels:
        - com.df.notify=true
        - com.df.distribute=true
        - com.df.serviceDomain=drone.p.cns.me
        - com.df.servicePath=/
        - com.df.port=8000
        - com.df.httpsOnly=true
        - com.df.xForwardedProto=true
    volumes:
      - data:/var/lib/drone/
    environment:
      - GIN_MODE=release
      - DRONE_ADMIN=${DRONE_ADMIN}
      - DRONE_GITHUB=true
      - DRONE_OPEN=true
      - DRONE_ORGS=${DRONE_ORGS}
      - DRONE_GITHUB_CLIENT=${DRONE_GITHUB_CLIENT}
      - DRONE_GITHUB_SECRET=${DRONE_GITHUB_SECRET}
      - DRONE_SECRET=${DRONE_SECRET}
      - DRONE_HOST=https://${EXTERNAL_DRONE_URL}.localtunnel.me

  agent:
    networks:
      - default
    image: drone/drone:0.7
    command: agent
    depends_on: [ drone-server ]
    deploy:
      mode: global
      resources:
        limits:
          cpus: '1'
          memory: 512M
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - GIN_MODE=release
      - DRONE_SERVER=ws://server:8000/ws/broker
      - DRONE_SECRET=${DRONE_SECRET}

  tunnel:
    image: kaixhin/localtunnel
    command: 8000 --local-host server --subdomain ${EXTERNAL_DRONE_URL}
    healthcheck:
      test: curl https://${EXTERNAL_DRONE_URL}.localtunnel.me | grep html || exit 1
    depends_on: [ drone-server ]
    deploy:
      mode: replicated
      resources:
        limits:
          cpus: '0.40'
          memory: 128M
      replicas: 1

networks:
  default:
    external: false
  proxy:
    external: true

volumes:
  data:
    driver: glusterfs

